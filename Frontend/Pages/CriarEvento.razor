@page "/CriarEvento"

<h3>Criar Evento</h3>

<div class="create-event-container">
    
 <div class="form-group">
     <label for="idutilizador">ID do Utilizador:</label>
     <input id="idutilizador" class="form-control" @bind="Idutilizador" />
 </div>

    <div class="form-group">
        <label for="nome">Nome:</label>
        <input id="nome" class="form-control" @bind="Nome"/>
    </div>

    <div class="form-group">
        <label for="data">Data:</label>
        <input id="data" class="form-control" type="date" @bind="Data"/>
    </div>

    <div class="form-group">
        <label for="hora">Hora:</label>
        <input id="hora" class="form-control" type="time" @bind="Hora"/>
    </div>

    <div class="form-group">
        <label for="local">Local:</label>
        <input id="local" class="form-control" @bind="Local"/>
    </div>

    <div class="form-group">
        <label for="descricao">Descrição:</label>
        <textarea id="descricao" class="form-control" @bind="Descricao"></textarea>
    </div>

    <div class="form-group">
        <label for="capacidade">Capacidade:</label>
        <input id="capacidade" class="form-control" type="number" @bind="Capacidade"/>
    </div>

    <div class="form-group">
        <label for="preco">Preço:</label>
        <input id="preco" class="form-control" type="number" step="0.01" @bind="Preco"/>
    </div>

    <div class="form-group">
        <label for="tipoingresso">Tipo de Ingresso:</label>
        <input id="tipoingresso" class="form-control" @bind="TipoIngresso"/>
    </div>

    <div class="form-group">
        <label for="quantidade">Quantidade:</label>
        <input id="quantidade" class="form-control" type="number" @bind="Quantidade"/>
    </div>

    <div class="form-group">
        <button class="btn btn-primary" @onclick="CriarEventoAsync">Criar Evento</button>
    </div>
</div>

<style>
    .create-event-container {
        max-width: 400px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f8f8f8;
    }

    .form-group {
        margin-bottom: 10px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        font-size: 14px;
        border-radius: 4px;
        border: 1px solid #ccc;
    }

    .btn-primary {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
    }

    .btn-primary:hover {
        background-color: #0069d9;
    }

    p {
        text-align: center;
    }

    a {
        color: #007bff;
        text-decoration: none;
    }
</style>

@code {
    
    private int Idutilizador { get; set; }
    private string Nome { get; set; }
    private DateTime Data { get; set; }
    private TimeOnly Hora { get; set; }
    private string Local { get; set; }
    private string Descricao { get; set; }
    private int Capacidade { get; set; }
    private decimal Preco { get; set; }
    private string TipoIngresso { get; set; }
    private int Quantidade { get; set; }

    [Inject]
    private NavigationManager navigationManager { get; set; }

    private async Task CriarEventoAsync()
    {
        var evento = new
        {
            idutilizador = Idutilizador,
            nome = Nome,
            data = Data,
            hora = Hora.ToTimeSpan(),
            local = Local,
            descricao = Descricao,
            capacidade = Capacidade,
            preco = Preco,
            tipoingresso = TipoIngresso,
            quantidade = Quantidade
        };

        var url = $"http://localhost:5052/api/Eventos/criarevento?idutilizador={Idutilizador}&nome={Nome}&data={Data}&hora={Hora}&local={Local}&descricao={Descricao}&capacidade={Capacidade}&preco={Preco}&tipoingresso={TipoIngresso}&quantidade={Quantidade}";

        using var client = new HttpClient();
        var response = await client.PostAsJsonAsync(url, evento);

        if (response.IsSuccessStatusCode)
        {
            // Creation successful
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Success");
            navigationManager.NavigateTo("/Eventos");
        }
        else
        {
            // Creation failed
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Error");
        }
    }
}
