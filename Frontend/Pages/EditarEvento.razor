@page "/EditarEvento"
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager

<h3>Editar Evento</h3>

<div class="form-group">
    <label for="idevento">ID DO EVENTO:</label>
    <input id="idevento" class="form-control" @bind="Idevento" />
</div>

<div class="form-group">
    <label for="nome">Nome:</label>
    <input id="nome" class="form-control" @bind="Nome" />
</div>

<div class="form-group">
    <label for="data">Data:</label>
    <input id="data" class="form-control" type="date" @bind="Data" />
</div>

<div class="form-group">
    <label for="hora">Hora:</label>
    <input id="hora" class="form-control" type="time" @bind="Hora" />
</div>

<div class="form-group">
    <label for="local">Local:</label>
    <input id="local" class="form-control" @bind="Local" />
</div>

<div class="form-group">
    <label for="descricao">Descrição:</label>
    <textarea id="descricao" class="form-control" @bind="Descricao"></textarea>
</div>

<div class="form-group">
    <label for="capacidade">Capacidade:</label>
    <input id="capacidade" class="form-control" type="number" @bind="Capacidade" />
</div>

<div class="form-group">
    <label for="preco">Preço:</label>
    <input id="preco" class="form-control" type="number" step="0.01" @bind="Preco" />
</div>
<div class="form-group">
    <button class="btn btn-primary" @onclick="EditarEventoAsync">Editar Evento</button>
</div>

@code {
    private int Idevento { get; set; }
    private string Nome { get; set; }
    private DateTime Data { get; set; }
    private TimeOnly Hora { get; set; }
    private string Local { get; set; }
    private string Descricao { get; set; }
    private int Capacidade { get; set; }
    private decimal Preco { get; set; }

    [Inject]
    private HttpClient httpClient { get; set; }

    [Inject]
    private NavigationManager navigationManager { get; set; }

    private async Task EditarEventoAsync()
    {
        if (string.IsNullOrEmpty(Nome) || string.IsNullOrEmpty(Local) || string.IsNullOrEmpty(Descricao) || Capacidade <= 0 || Preco <= 0)
        {
            Console.WriteLine("Invalid input");
            return;
        }

        var evento = new
        {
            id = Idevento,
            nome = Nome,
            data = Data,
            hora = Hora,
            local = Local,
            descricao = Descricao,
            capacidade = Capacidade,
            preco = Preco
        };

        var url = $"http://localhost:5052/api/Eventos/{Idevento}?idevento={Idevento}&nome={Nome}&data={Data}&hora={Hora}&local={Local}&descricao={Descricao}&capacidade={Capacidade}&preco={Preco}";

        var response = await httpClient.PutAsJsonAsync(url, evento);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Success");
            navigationManager.NavigateTo("/Eventos");
        }
        else
        {
            Console.WriteLine("Error");
        }
    }
}