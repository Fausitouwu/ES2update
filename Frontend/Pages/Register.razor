@page "/Register"

<h3>Register</h3>

<div class="register-container">
    <div class="form-group">
        <label for="username">Username:</label>
        <input id="username" class="form-control" @bind="Username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <input id="password" class="form-control" type="password" @bind="Password" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <input id="email" class="form-control" type="email" @bind="Email" />
    </div>

    <div class="form-group">
        <button class="btn btn-primary" @onclick="CriarUserAsync">Register</button>
    </div>
    
    <div class="form-group">
        <p>Already have an account? <a href="/Login">Login here</a></p>
    </div>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string Email { get; set; }

    [Inject]
    private NavigationManager navigationManager { get; set; }

    private async Task CriarUserAsync()
    {
        var user = new
        {
            nome = Username,
            senha = Password,
            email = Email
        };

        var url = $"http://localhost:5052/api/Utilizadores/criar?nome={Username}&senha={Password}&email={Email}";

        using var client = new HttpClient();
        var response = await client.PostAsJsonAsync(url, user);

        if (response.IsSuccessStatusCode)
        {
            // Creation successful
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Success");
            navigationManager.NavigateTo("/");
        }
        else
        {
            // Creation failed
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Error");
        }
    }
}

